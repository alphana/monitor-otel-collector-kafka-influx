version: '3.5'
name: monitor-otel-collector
services:

  # And put them in an OTEL collector pipeline...
  otel-collector:
    extra_hosts: ['host.docker.internal:host-gateway']
    image: otel/opentelemetry-collector:0.86.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./otel/otel-collector.yml:/etc/otel-collector.yaml
    labels:
      org.label-schema.group: "monitoring"

  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml
      - ./tempo/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    labels:
      org.label-schema.group: "monitoring"

  prometheus:
    image: prom/prometheus:latest
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-tanzu.yml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:10.1.1
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki
    extra_hosts: ['host.docker.internal:host-gateway']
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

    labels:
      org.label-schema.group: "monitoring"